//THIS WORKS if you run
// to include forms:
// ./gradlew buildPage;
// ./gradlew copyForms;
// ./gradlew runFinalJar
// to exclude forms:
// ./gradlew buildPage;
// manually remove forms from target/forms
// make sure the sk/index.html en/index.html
//dont contain any links to forms.

buildscript {
    ext.kotlin_version = '1.3.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

//defaultTasks 'build'
mainClassName = "forms.FormBuilderFun"
project.ext.targetDir="target"

repositories {
    mavenCentral()
}
dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}



task buildPage(description: 'Builds page.') {
            doLast {
                File hugoRootDir = new File("src/main/resources/")

                File targetDir = new File("target")
                File hugoServerDir = new File("src/main/resources/public")

                exec {
                  workingDir hugoRootDir
                  executable 'hugo'
                }

                copy {
                      from hugoServerDir
                      into targetDir
                }
            }
        }

jar {
   manifest {
      attributes 'Main-Class': 'forms.FormBuilderFunKt'
   }  
   from {
      configurations.compile.collect {it.isDirectory() ? it : zipTree(it) }
   }
}

task copyForms( description: 'Copies form dir from public.', dependsOn: [] ){

    File hugoFormsDir = new File("src/main/resources/resources/forms")
    File targetFormsDir = new File("target/forms")


    copy {
        from hugoFormsDir
        into targetFormsDir
    }

}

task runFinalJar(type: JavaExec){

     classpath = files('build/libs/la-page.jar')
     main = 'forms.FormBuilderFunKt'
  }


//build.dependsOn.add("buildPage")
//build.dependsOn.add("copyForms")
//build.dependsOn.add("runFinalJar")

clean.doFirst (){
    delete "${targetDir}"
}
